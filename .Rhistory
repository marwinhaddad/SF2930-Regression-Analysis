demo()
# lists the data points in the first fold
subset(model1$pred, Resample == "Fold1")
#project1
getwd() #used to se where my document are stored
library(MPV)
table <- read.csv('bodyfatmen.csv')
source("~/RProjects/Project1/main.R", echo=TRUE)
summary(fit)
#### DATA ####
# READ IN DATA
data <- read.csv("bodyfatmen.csv")
# DATA SUMMARY
View(data)
# CHECKING FOR MISSING VALUES
print(any(is.na(data)))
# CHECK FOR DUPLICATE ROWS
print(sum(duplicated(data)))
non_converted_lm <- lm(density ~ ., data=data)
print(summary(non_converted_lm))
anova(fit)
anova(non_converted_lm)
# externally studentized residuals
stud_res <- rstudent(fit)
setwd("C:/Users/marwi/Documents/RProjects/Project1")
library(caret)
library(ggplot2)
library(MASS)
set.seed(0)
# functions
convert2SI <- function(data){
data$weight <- data$weight * 0.4535924
data$height <- data$height * 0.0254
data$neck <- data$neck * 0.01
data$chest <- data$chest * 0.01
data$abdomen <- data$abdomen * 0.01
data$hip <- data$hip * 0.01
data$thigh <- data$thigh * 0.01
data$knee <- data$knee * 0.01
data$ankle <- data$ankle * 0.01
data$biceps <- data$biceps * 0.01
data$forearm <- data$forearm * 0.01
data$wrist <- data$wrist * 0.01
return(data)
plot_stud_res <- function(model, data) {
if (class(model) != "lm") {
stop("Model must be a result of lm()")
}
if (!is.data.frame(data)) {
stop("Data must be a data.frame")
}
data$stud_res <- rstudent(model)
data$fitted_values <- fitted(model)
p <- ggplot(data, aes(x = fitted_values, y = stud_res)) +
geom_point() +  # Add points
geom_hline(yintercept = 0, linetype = "dashed") +  # Add a horizontal line at 0
labs(x = "Fitted Values", y = "Externally Studentized Residuals") +
theme_minimal()  # Optional: use a minimal theme
plot(p)
}
plot_qq_stud_res <- function(model) {
data_to_plot <- data.frame(
stud_res = rstudent(model)
)
p <- ggplot(data_to_plot, aes(sample = stud_res)) +
stat_qq() +
stat_qq_line() +
labs(x = "Theoretical Quantiles", y = "Externally Studentized Residuals") +
theme_minimal()
print(p)
}
# read data
data <- read.csv("bodyfatmen.csv")
plot(data)
plot(data)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("C:/Users/marwi/Documents/RProjects/Project1/project1.R", echo=TRUE)
source("C:/Users/marwi/Documents/RProjects/Project1/project1.R", echo=TRUE)
source("C:/Users/marwi/Documents/RProjects/Project1/project1.R", echo=TRUE)
setwd("C:/Users/marwi/Documents/RProjects/Project1")
library(caret)
library(ggplot2)
library(MASS)
set.seed(0)
convert2SI <- function(data){
data$density <- data$density * 1000
data$weight <- data$weight * 0.4535924
data$height <- data$height * 0.0254
data$neck <- data$neck * 0.01
data$chest <- data$chest * 0.01
data$abdomen <- data$abdomen * 0.01
data$hip <- data$hip * 0.01
data$thigh <- data$thigh * 0.01
data$knee <- data$knee * 0.01
data$ankle <- data$ankle * 0.01
data$biceps <- data$biceps * 0.01
data$forearm <- data$forearm * 0.01
data$wrist <- data$wrist * 0.01
return(data)
}
plot_stud_res <- function(model, data) {
if (class(model) != "lm") {
stop("Model must be a result of lm()")
}
if (!is.data.frame(data)) {
stop("Data must be a data.frame")
}
data$stud_res <- rstudent(model)
data$fitted_values <- fitted(model)
p <- ggplot(data, aes(x = fitted_values, y = stud_res)) +
geom_point() +  # Add points
geom_hline(yintercept = 0, linetype = "dashed") +  # Add a horizontal line at 0
labs(x = "Fitted Values", y = "Externally Studentized Residuals") +
theme_minimal()  # Optional: use a minimal theme
plot(p)
}
plot_qq_stud_res <- function(model) {
data_to_plot <- data.frame(
stud_res = rstudent(model)
)
p <- ggplot(data_to_plot, aes(sample = stud_res)) +
stat_qq() +
stat_qq_line() +
labs(x = "Theoretical Quantiles", y = "Externally Studentized Residuals") +
theme_minimal()
print(p)
}
# read data
data <- read.csv("bodyfatmen.csv")
plot(data)
source("~/RProjects/Project1/main.R", echo=TRUE)
source("C:/Users/marwi/Documents/RProjects/Project1/project1.R", echo=TRUE)
setwd("C:/Users/marwi/Documents/RProjects/Project1")
setwd("C:/Users/marwi/Documents/RProjects/Project1")
library(caret)
library(ggplot2)
library(MASS)
set.seed(0)
convert2SI <- function(data){
data$density <- data$density * 1000
data$weight <- data$weight * 0.4535924
data$height <- data$height * 0.0254
data$neck <- data$neck * 0.01
data$chest <- data$chest * 0.01
data$abdomen <- data$abdomen * 0.01
data$hip <- data$hip * 0.01
data$thigh <- data$thigh * 0.01
data$knee <- data$knee * 0.01
data$ankle <- data$ankle * 0.01
data$biceps <- data$biceps * 0.01
data$forearm <- data$forearm * 0.01
data$wrist <- data$wrist * 0.01
return(data)
}
plot_stud_res <- function(model, data) {
data$stud_res <- rstudent(model)
data$fitted_values <- fitted(model)
p <- ggplot(data, aes(x = fitted_values, y = stud_res)) +
geom_point() +  # Add points
geom_hline(yintercept = 0, linetype = "dashed") +  # Add a horizontal line at 0
labs(x = "Fitted Values", y = "Externally Studentized Residuals") +
theme_minimal()  # Optional: use a minimal theme
return(p)
}
plot_qq_stud_res <- function(model) {
data_to_plot <- data.frame(
stud_res = rstudent(model)
)
p <- ggplot(data_to_plot, aes(sample = stud_res)) +
stat_qq() +
stat_qq_line() +
labs(x = "Theoretical Quantiles", y = "Externally Studentized Residuals") +
theme_minimal()
return(p)
}
# read data
data <- read.csv("bodyfatmen.csv")
plot(data)
setwd("C:/Users/marwi/Documents/RProjects/Project1")
library(caret)
setwd("C:/Users/marwi/Documents/RProjects/Project1")
library(caret)
library(ggplot2)
library(MASS)
set.seed(0)
convert2SI <- function(data){
data$density <- data$density * 1000
data$weight <- data$weight * 0.4535924
data$height <- data$height * 0.0254
data$neck <- data$neck * 0.01
data$chest <- data$chest * 0.01
data$abdomen <- data$abdomen * 0.01
data$hip <- data$hip * 0.01
data$thigh <- data$thigh * 0.01
data$knee <- data$knee * 0.01
data$ankle <- data$ankle * 0.01
data$biceps <- data$biceps * 0.01
data$forearm <- data$forearm * 0.01
data$wrist <- data$wrist * 0.01
return(data)
}
plot_stud_res <- function(model, data) {
data$stud_res <- rstudent(model)
data$fitted_values <- fitted(model)
p <- ggplot(data, aes(x = fitted_values, y = stud_res)) +
geom_point() +  # Add points
geom_hline(yintercept = 0, linetype = "dashed") +  # Add a horizontal line at 0
labs(x = "Fitted Values", y = "Externally Studentized Residuals") +
theme_minimal()  # Optional: use a minimal theme
return(p)
}
plot_qq_stud_res <- function(model) {
data_to_plot <- data.frame(
stud_res = rstudent(model)
)
p <- ggplot(data_to_plot, aes(sample = stud_res)) +
stat_qq() +
stat_qq_line() +
labs(x = "Theoretical Quantiles", y = "Externally Studentized Residuals") +
theme_minimal()
return(p)
}
# read data
data <- read.csv("bodyfatmen.csv")
View(data)
return(p)
plot_stud_res <- function(model, data) {
data$stud_res <- rstudent(model)
data$fitted_values <- fitted(model)
p <- ggplot(data, aes(x = fitted_values, y = stud_res)) +
geom_point() +  # Add points
geom_hline(yintercept = 0, linetype = "dashed") +  # Add a horizontal line at 0
labs(x = "Fitted Values", y = "Externally Studentized Residuals") +
theme_minimal()  # Optional: use a minimal theme
return(p)
}
plot_qq_stud_res <- function(model) {
data_to_plot <- data.frame(
stud_res = rstudent(model)
)
p <- ggplot(data_to_plot, aes(sample = stud_res)) +
stat_qq() +
stat_qq_line() +
labs(x = "Theoretical Quantiles", y = "Externally Studentized Residuals") +
theme_minimal()
return(p)
}
# read data
data <- read.csv("bodyfatmen.csv")
View(data)
#project1
getwd() #used to se where my document are stored
library(MPV)
table <- read.csv('bodyfatmen.csv')
